---
import Search from '../icons/Search.astro'
---

<form class="flex p-1 relative">
  <input type="text" placeholder="Search" class="bg-transparent focus:outline-none w-full min-w-20 pl-4 text-sm text-[clamp(12px,2vw,0.875rem)]" />
  <button type="button" class="p-3 max-w-12 w-full min-w-10 bg-zinc-500/10 rounded-full cursor-default">
    <Search />
  </button>
</form>
<div data-results style="display: none;" class="z-50 absolute max-w-[600px] w-[95vw] top-[72px] left-1/2 -translate-x-1/2 bg-zinc-950/75 backdrop-blur-3xl rounded-3xl p-4 flex gap-4 flex-col"></div>

<script>
  import { getBackdrop } from '../lib/apiUtils'
  import { qs, $on } from '../lib/lib'
  import options from '../lib/apiKey.js'
  import { Overview } from '../lib/overview'
  const $input = qs('input')
  const isEmpty = () => $input.value === ''
  const $results = qs('[data-results]')

  const results = {
    $: qs('[data-results]'),
    isOpen: false,
    hide() {
      this.$.style.display = 'none'
      this.isOpen = false
    },
    show() {
      this.$.removeAttribute('style')
      this.isOpen = true
    },
  }

  function onInput() {
    if (isEmpty()) return results.hide()
    debouncedQuery($input.value)
  }

  function onKeydown(e) {
    if (e.keyCode === 27) {
      $input.value = ''
      results.hide()
    }
  }

  function onFocus() {
    if (isEmpty()) return
    results.show()
  }

  function updateResults(movies) {
    $results.innerHTML = null
    movies = cleanResults(movies)
    if (movies == '') {
      const string = resultHTML(null, null, null, null)
      $results.insertAdjacentHTML('beforeend', string)
    }
    movies.forEach(movie => {
      const string = resultHTML(movie.poster_path, movie.title, movie.release_date, movie.id)
      $results.insertAdjacentHTML('beforeend', string)
    })
    results.show()
  }

  function cleanResults(movies) {
    return movies?.filter(result => {
      return result.backdrop_path && result.hasOwnProperty('release_date') && result.release_date !== ''
    })
  }

  function resultHTML(backdrop, title, year, movieId) {
    let html = ``
    if (backdrop === null && title === null && year === null) {
      html = `
              <div class="text-xl flex gap-4 h-36 w-full items-center justify-center">
                  <p class="truncate">No results</p>
              </div>`
    } else {
      backdrop = getBackdrop(backdrop, 'sm')
      year = new Date(year).getFullYear()
      html = `
              <a id="${movieId}" class="text-base grid grid-cols-[90px,minmax(0,1fr)] gap-4 cursor-pointer group">
                <div class="h-36 aspect-[10/16] rounded-lg overflow-hidden flex-initial">
                  <img src="${backdrop}" alt="Movie poster" loading="lazy" class="h-full w-full saturate-[0.75] group-hover:saturate-100 transition" />
                </div>
                <div class="max-w-3/5">
                  <p class="truncate text-ellipsis group-hover:text-rose-300 transition text-[clamp(12px,2vw,1em)]">${title}</p>
                  <p class="font-light text-zinc-300 group-hover:text-zinc-500 transition text-[clamp(12px,2vw,1em)]">${year}</p>
                </div>
              </a>`
    }
    return html
  }

  async function querySearch(query) {
    const res = await fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)
    const { results } = await res.json()
    updateResults(results)
  }

  function debounce(func, delay) {
    let timer
    return (...args) => {
      clearTimeout(timer)
      timer = setTimeout(() => {
        func.apply(this, args)
      }, delay)
    }
  }

  const debouncedQuery = debounce(querySearch, 300)

  $on(document, 'mouseup', ({ clientX: x, clientY: y }) => {
    const { left: l, right: r, top: t, bottom: b } = results.$.getBoundingClientRect()
    if (document.activeElement === $input) return
    if (x < l || x > r || y < t || y > b) {
      results.hide()
    }
  })
  $on($results, 'click', e => {
    const id = e.target.closest('a').id
    Overview.toggle(true, id)
  })
  $on($input, 'focus', onFocus)
  $on($input, 'keydown', onKeydown)
  $on($input, 'input', onInput)
</script>
