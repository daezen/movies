---
import Search from '../icons/Search.astro'
---

<form class="flex h-16 p-1 relative">
  <input type="text" placeholder="Search" class="bg-transparent focus:outline-none px-6 text-sm flex-1" />
  <button type="button" class="p-4 h-full aspect-square bg-zinc-500/10 rounded-full">
    <Search />
  </button>
  <div data-results style="display: none;" class="z-50 absolute w-[800px] top-[72px] left-1/2 -translate-x-1/2 bg-zinc-950/75 backdrop-blur-3xl rounded-3xl p-4 shadow-2xl flex gap-4 flex-col"></div>
</form>

<script>
  import { getBackdrop } from '../lib/apiUtils'
  import { qs, $on } from '../lib/helpers.js'
  import options from '../lib/apiKey.js'
  const $input = qs('input')

  const resultsContainer = {
    $: qs('[data-results]'),
    hide() {
      this.$.style.display = 'none'
    },
    show() {
      this.$.removeAttribute('style')
    },
  }

  function onInput() {
    if ($input.value === '') return resultsContainer.hide()
    debouncedQuery($input.value)
  }

  function onKeydown(e) {
    console.log(e.target)
  }

  function updateResults(movies) {
    const $results = qs('[data-results]')
    $results.innerHTML = null
    cleanResults(movies).forEach(result => {
      const string = resultHTML(result.backdrop_path, result.original_title, result.release_date)
      $results.insertAdjacentHTML('beforeend', string)
    })
    resultsContainer.show()
  }

  function cleanResults(movies) {
    return movies?.filter(result => {
      return result.backdrop_path && result.hasOwnProperty('release_date') && result.release_date !== ''
    })
  }

  function resultHTML(backdrop, title, year) {
    backdrop = getBackdrop(backdrop, 'sm')
    year = new Date(year).getFullYear()
    const html = `
              <div class="text-base h-36 flex gap-4">
                <div class="h-full aspect-video rounded-lg overflow-hidden flex-initial">
                  <img src="${backdrop}" alt="Movie poster" loading="lazy" class="h-full w-full" />
                </div>
                <div class="w-3/5">
                  <p class="truncate">${title}</p>
                  <p class="font-light text-zinc-300">${year}</p>
                </div>
              </div>`
    return html
  }

  async function querySearch(query) {
    const res = await fetch(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`, options)
    const { results } = await res.json()
    updateResults(results)
  }

  function debounce(func, delay) {
    let timer
    return (...args) => {
      clearTimeout(timer)
      timer = setTimeout(() => {
        func.apply(this, args)
      }, delay)
    }
  }

  const debouncedQuery = debounce(querySearch, 400)
  $on($input, 'input', onKeydown)
  $on($input, 'input', onInput)
</script>
