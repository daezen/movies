---
import { getBackdrop, getMovieDetails, getRandomMovie, getActors, getCertification, getLogo } from '../lib/apiUtils'
import AgeRating from '../components/AgeRating.astro'
import Starring from '../components/Starring.astro'
import Genres from '../components/Genres.astro'
import Likes from '../components/Likes.astro'
import Dot from '../components/Dot.astro'
import Play from '../icons/Play.astro'
import Plus from '../icons/Plus.astro'

const movie = await getRandomMovie()
const details = await getMovieDetails(movie.id)
const genres = details.genres
const overview = movie.overview
const cast = getActors(details.credits)
const logo = getLogo(details.images, 'og')
const backdrop = getBackdrop(movie.backdrop_path, 'og')
const year = new Date(movie.release_date).getFullYear()
const likes = (Math.round(movie.vote_average) / 10) * 100
const cert = await getCertification(details.release_dates.results)
---

<header class="text-lg mb-16 relative">
  <img src={backdrop} loading="lazy" class="absolute h-[150%] w-full blur-[384px] z-[-1] select-none" draggable="false" />
  <div class="image rounded-3xl overflow-hidden shadow-2xl" style=`background-image: url(${backdrop});`>
    <div class="shadow">
      <section class="px-20 mx-2 py-8 h-screen max-w-[860px] custom-grid">
        <img src={logo} alt="Movie logo" class="aspect-auto max-h-64 place-self-end justify-self-center mb-16 transition-all hover:brightness-50 cursor-pointer" />
        <div class="place-self-center flex flex-col">
          <div class="flex gap-4 items-center">
            <Likes rating={likes} />
            <Dot />
            <p>{year}</p>
            <Dot />
            <AgeRating rating={cert} />
            <Dot />
            <Genres genres={genres} />
          </div>
          <p class="text-zinc-300 py-2 mb-2 rounded-lg three-lines max-w-[950px] leading-loose">{overview}</p>
        </div>
        <div class="flex flex-col gap-4 place-self-start">
          <Starring cast={cast} amount="7" />
          <div class="flex gap-5">
            <button
              data-trailer
              id={movie.id}
              class="relative overflow-hidden custom-hover gradient-one bg-rose-600 flex items-center justify-center gap-4 text-2xl w-[266px] h-[76px] py-6 rounded-full border-2 border-rose-500"
              ><Play />Play Trailer</button
            >
            <button
              class="relative overflow-hidden custom-hover gradient-two flex items-center justify-center gap-4 text-2xl w-[300px] h-[76px] py-5 bg-zinc-100/15 rounded-full border-2 border-zinc-500/15 backdrop-blur-md"
              ><Plus />My Watchlist</button
            >
          </div>
        </div>
      </section>
    </div>
  </div>
</header>

<style>
  .three-lines {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  .custom-grid {
    display: grid;
    grid-template-rows: 1fr 165px 300px;
  }
  .image {
    background: center / cover no-repeat;
  }
  .shadow {
    background: linear-gradient(to right, black 0%, rgba(0, 0, 0, 0.8) 25%, transparent 75%);
  }
  .custom-hover::after {
    content: '';
    @apply w-full h-full absolute transition duration-500 opacity-0;
  }
  .custom-hover:hover::after {
    @apply opacity-100;
  }
  .gradient-one::after {
    background-image: radial-gradient(farthest-corner at 50% 100%, rgba(255, 255, 255, 0.3) 0%, transparent 69%);
  }
  .gradient-two::after {
    background-image: radial-gradient(farthest-corner at 50% 100%, rgba(255, 255, 255, 0.2) 0%, transparent 69%);
  }
</style>

<script>
  import { qs, $on } from '../lib/lib'
  import options from '../lib/apiKey.js'

  async function findTrailer(e) {
    const res = await fetch(`https://api.themoviedb.org/3/movie/${e.target.id}/videos`, options)
    const { results: trailers } = await res.json()
    const trailer = trailers.filter(trailer => trailer.type == 'Trailer')
    try {
      window.open(`https://youtu.be/${trailer[0].key}`, '_blank')
    } catch (error) {
      console.log(error)
    }
  }

  $on(qs('[data-trailer]'), 'click', findTrailer)
</script>
